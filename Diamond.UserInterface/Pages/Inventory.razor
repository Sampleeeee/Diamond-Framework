@page "/Inventory"

<div class="ui">
    <div class="inventory">
        <div id="player-inventory">
            @if (PrimaryInventory != null)
            {
                @foreach ((var item, int value) in PrimaryInventory)
                {
                    <div class="slot">
                        <div class="item" draggable="true" @ondragstart="() => ItemDragged(item)">
                            <div class="item-count">@value</div>
                            <div class="item-name">@item.Name</div>
                            <div class="item-name-bg"></div>
                        </div>
                    </div>
                }
            }
        </div>
        <div id="controls">
            @if (ShowInfo)
            {
                <div class="info-div"></div>
            }
            <div class="controls-div">
                <input type="number" id="count" class="control" @bind-value="ItemCount"/>

                @* TODO add localization *@
                <div class="control" dropzone="true" ondragover="event.preventDefault();" ondragstart="event.dataTransfer.setData('', event.target.id);" @ondrop="_ => OnUse()" id="use">Use</div>
                <div class="control" dropzone="true" ondragover="event.preventDefault();" ondragstart="event.dataTransfer.setData('', event.target.id);" @ondrop="_ => OnGive()" id="give">Give</div>
                <div class="control" dropzone="true" ondragover="event.preventDefault();" ondragstart="event.dataTransfer.setData('', event.target.id);" @ondrop="_ => OnDrop()" id="drop">Drop</div>
            </div>
        </div>
        <div id="other-inventory">
            @if (SecondaryInventory == null)
            {
                <div id="no-second-inventory-message">Secondary inventory is not available.</div>
            }
            else
            {
                @foreach ((var item, int value) in SecondaryInventory)
                {
                    <div class="slot">
                        <div class="item" draggable="true" @ondrag="() => ItemDragged(item, false)" style="background-image: @(item.ImageUrl)">
                            <div class="item-count">@value</div>
                            <div class="item-name">@item.Name</div>
                            <div class="item-name-bg"></div>
                        </div>
                    </div>
                }
            }
        </div>
    </div>
    
    @if (ShowDialog)
    {
        <ul id="dialog">
            @foreach ((int key, string value) in NearbyPlayers)
            {
                <li style="margin-bottom: 40px">
                    <button class="nearby-player-button" @onclick="() => OnNearbyPlayerClicked(key)">@($"{value} ({key})")</button>
                </li>
            }
        </ul>
    }
</div>